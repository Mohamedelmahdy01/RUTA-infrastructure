name: Deploy Infrastructure and Application

on:
  push:
    branches: [main, develop]
    paths:
      - 'terraform/**'
      - 'ansible/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'terraform/**'
      - 'ansible/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      terraform_action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  AWS_REGION: us-west-2
  TF_VERSION: "1.5.0"
  ANSIBLE_VERSION: "8.0.0"
  SLACK_CHANNEL: "C094VC0EYTB"  # Added Slack channel

jobs:
  # 1. PRE-DEPLOYMENT CHECKS
  pre-checks:
    name: Pre-Deployment Checks
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Slack - Workflow Started
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            :rocket: *Deployment Initiated* 
            *Repo*: ${{ github.repository }}
            *Environment*: ${{ github.event.inputs.environment || 'staging' }}
            *Action*: ${{ github.event.inputs.terraform_action || 'apply' }}
            *By*: ${{ github.actor }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # 2. TERRAFORM PLAN
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: pre-checks
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.terraform_action == 'plan' || github.event.inputs.terraform_action == 'apply')) }}
    
    steps:
      # [Previous Terraform Plan steps remain unchanged...]
      
      - name: Slack - Plan Complete
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            :blue_book: *Terraform Plan Complete*
            *Environment*: ${{ needs.pre-checks.outputs.environment }}
            *Details*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # 3. MANUAL APPROVAL FOR PRODUCTION
  production-approval:
    name: Production Approval
    if: ${{ (needs.pre-checks.outputs.environment == 'production') && (github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main') }}
    needs: [pre-checks, terraform-plan]
    runs-on: ubuntu-latest
    
    steps:
      - name: Request Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ secrets.PRODUCTION_APPROVERS || 'team-leads' }}
          minimum-approvals: 1
          issue-title: "Approval required for production deployment"
          issue-body: |
            Please review the Terraform plan and approve this production deployment.
            
            **Plan Artifact**: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Approve by commenting: `/approve`

      - name: Slack - Approval Requested
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            :hourglass: *Production Approval Required*
            *Repository*: ${{ github.repository }}
            *Run*: #${{ github.run_number }}
            *Plan*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            *Approvers*: ${{ secrets.PRODUCTION_APPROVERS || 'team-leads' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # 4. TERRAFORM APPLY
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: 
      - pre-checks
      - terraform-plan
      - production-approval  # Only for production
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.terraform_action == 'apply') }}
    environment: ${{ needs.pre-checks.outputs.environment }}
    
    steps:
      # [Previous Terraform Apply steps remain unchanged...]
      
      - name: Slack - Apply Complete
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            :white_check_mark: *Infrastructure Deployed*
            *Environment*: ${{ needs.pre-checks.outputs.environment }}
            *Details*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # 5. ANSIBLE DEPLOYMENT
  ansible-deploy:
    # [Previous Ansible steps remain unchanged...]
    
    steps:
      # [Existing Ansible steps...]
      
      - name: Slack - Deployment Status
        if: always()
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            ${{ job.status == 'success' && ':rocket: *Application Deployed*' || ':x: *Deployment Failed*' }}
            *Environment*: ${{ needs.pre-checks.outputs.environment }}
            *URL*: http://${{ steps.get-ip.outputs.ec2_ip }}
            *Logs*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # 6. DEPLOYMENT TRACKING
  track-deployment:
    # [Previous deployment tracking steps remain unchanged...]

  # 7. TERRAFORM DESTROY
  terraform-destroy:
    # [Previous destroy steps remain unchanged...]
    
    steps:
      # [Existing destroy steps...]
      
      - name: Slack - Destroy Notification
        if: always()
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ env.SLACK_CHANNEL }}
          slack-message: |
            ${{ job.status == 'success' && ':wastebasket: *Resources Destroyed*' || ':x: *Destroy Failed*' }}
            *Environment*: ${{ github.event.inputs.environment || 'staging' }}
            *Logs*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
